# -*- coding: utf-8 -*-
"""17aug2023.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JgdDh4Avw0jVLDcio1TtOd1vvMD7g9vM
"""

#dictionary : mutable datatype
ordered collection of element (no index)
key: value
key identifier , value =>data
key : unique
value : unique/duplication
key hamesha immutable data banega

mydictionary = {1:"yash","sid":"tushar","friend":"yash"}
print(mydictionary)
print(type(mydictionary))

mydictionary["email"]="yash@gmail.com"
mydictionary

mydictionary.get("email122","no data ")

mydictionary.keys()

mydictionary={1:"tushar",2:"user",3:"yash",1:"aman"}
mydictionary

for data in mydictionary.values():
  print(data)

mytuple=(10,20)
print(type(mytuple))

x,y= mytuple
print(x,y)
# tuple unpacking

mydictionary.items()

mylist=[(1, 'aman'), (2, 'user'), (3, 'yash')]

for i in mylist:
    key,data=i
    print(key,data)

for key,data in mydictionary.items():
    print(key,data)

#task
 #take a input from the user and find out all the constant with the coutn in form of dictionary
 # read the logic for primary number,fibonacci numbers,
 #armstrong number, and pallindrome
 # deep copy and shallow copy
 #methods difference isdisjoint method and issuperset

# set - mutable ,mathmatical expression k lye use hota h
 #and it contain element
 # all elements should be immutable
 # set conatin all unique value
 # set

myset=set({})
print(type(myset))

myset={10,20,30,10,20,50}
myset

myset={10,20,30,10,20,50}
myset.add(10000)

myset

myset.remove(10)
myset

myset.discard(10)
myset

myseta={1,2,3,4,5}
mysetb={3,4,5,6}
myseta.union(mysetb)

myseta={1,2,3,4,5}
mysetb={3,4,5,6}
myseta.intersection(mysetb)

for i in range(1,5):
    print(i)

    for j in range(0,i*i):
      print("*",end="")
    print("\n")

mylist=[10,20,30]
newlist=[]
for val in mylist:
    newlist.append(val**2)

#simple and short method
mylist=[10,20,30,50,25,77,66]
squarelist=[val**2 for val in mylist if val%2==0]
squarelist

invitation1={"aman","shan","raj"}
invitation2={"shyam","ravi"}

for x in invitation1:
    print(x)

invitation1={"aman","shan","raj"}
invitation2={"shyam","ravi"}

seta={x for x in invitation1}
print(seta)

invitation1={"aman","shan","raj"}
invitation2={"shyam","ravi","aman"}

seta={x for x in invitation1.intersection(invitation2)}
print(seta)

invitation1={"aman","shan","raj"}
invitation2={"shyam","ravi","aman"}
seta={x.title() for x in invitation1.intersection(invitation2)}
print(seta)

act1={"sohan","ravi","rohan"}
act2={"shyam","ravi","kabhi"}
seta={x.title() for x in act1.intersection(act2)}
print(seta)

act1=["sohan","ravi","rohan"]
act2=["shyam","ravi","kabhi"]
result=[ x for x in act1 if x in act2]
print(result)

